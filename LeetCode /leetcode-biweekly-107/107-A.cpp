
// Generated By Leetcode2IDE
#include <bits/stdc++.h>
using namespace std;

class Solution
{
public:
    int maximumNumberOfStringPairs(vector<string> &words)
    {
        set<int> index;
        int ans = 0;
        for (int i = 0; i < words.size(); i++)
        {
            if (index.find(i) == index.end())
            {
                for (int j = i + 1; j < words.size(); j++)
                {
                    string str = words[j];
                    reverse(str.begin(), str.end());
                    if (words[i] == str && index.find(j) == index.end())
                    {
                        ans++;
                        index.insert(j);
                        break;
                    }
                }
            }
        }
        return ans;
    }
};

int main()
{

    Solution leetcode2IDE;
    vector<string> words1 = {"cd", "ac", "dc", "ca", "zz"};
    int output_1 = 2;
    if (leetcode2IDE.maximumNumberOfStringPairs(words1) == output_1)
    {
        cout << "Sample #1 : Accepted" << endl;
    }
    else
    {
        cout << "Sample #1 : Wrong Answer" << endl;
    }

    vector<string> words2 = {"ab", "ba", "cc"};
    int output_2 = 1;
    if (leetcode2IDE.maximumNumberOfStringPairs(words2) == output_2)
    {
        cout << "Sample #2 : Accepted" << endl;
    }
    else
    {
        cout << "Sample #2 : Wrong Answer" << endl;
    }

    vector<string> words3 = {"aa", "ab"};
    int output_3 = 0;
    if (leetcode2IDE.maximumNumberOfStringPairs(words3) == output_3)
    {
        cout << "Sample #3 : Accepted" << endl;
    }
    else
    {
        cout << "Sample #3 : Wrong Answer" << endl;
    }

    return 0;
}
