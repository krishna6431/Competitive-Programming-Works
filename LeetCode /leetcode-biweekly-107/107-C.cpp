
// Generated By Leetcode2IDE
#include <bits/stdc++.h>
using namespace std;

class Solution
{
private:
    int f(int idx, vector<string> &word, string str)
    {
        if (idx == word.size())
        {
            cout << str << endl;
            return str.size();
        }
        string temp = word[idx];
        int ans1 = 1e9;
        int ans2 = 1e9;
        int ans3 = 1e9;
        int ans4 = 1e9;
        int ans5 = 1e9;
        if (idx == 0)
        {
            str = temp;
            ans4 = f(idx + 1, word, str);
        }
        else if (str.size() != 0 and str[str.size() - 1] == temp[0])
        {
            temp = temp.substr(1, temp.size() - 1);
            str = str + temp;
            ans1 = f(idx + 1, word, str);
        }
        else if (str.size() != 0 and str[0] == temp[temp.size() - 1])
        {
            str = str.substr(1, str.size() - 1);
            str = temp + str;
            ans2 = f(idx + 1, word, str);
        }
        else
        {
            string str1 = temp + str;
            ans3 = f(idx + 1, word, str1);
            string str2 = str + temp;
            ans5 = f(idx + 1, word, str2);
        }
        return min({ans1, ans2, ans3, ans4, ans5});
    }

public:
    int minimizeConcatenatedLength(vector<string> &words)
    {
        int ans = f(0, words, "");
        cout << ans << endl;
        return ans;
    }
};

int main()
{

    Solution leetcode2IDE;
    vector<string> words1 = {"aa", "ab", "bc"};
    int output_1 = 4;
    if (leetcode2IDE.minimizeConcatenatedLength(words1) == output_1)
    {
        cout << "Sample #1 : Accepted" << endl;
    }
    else
    {
        cout << "Sample #1 : Wrong Answer" << endl;
    }

    vector<string> words2 = {"ab", "b"};
    int output_2 = 2;
    if (leetcode2IDE.minimizeConcatenatedLength(words2) == output_2)
    {
        cout << "Sample #2 : Accepted" << endl;
    }
    else
    {
        cout << "Sample #2 : Wrong Answer" << endl;
    }

    vector<string> words3 = {"aaa", "c", "aba"};
    int output_3 = 6;
    if (leetcode2IDE.minimizeConcatenatedLength(words3) == output_3)
    {
        cout << "Sample #3 : Accepted" << endl;
    }
    else
    {
        cout << "Sample #3 : Wrong Answer" << endl;
    }

    return 0;
}
