
// Generated By Leetcode2IDE
#include <bits/stdc++.h>
using namespace std;

#define ll long long
class Solution
{
public:
	int minOperations(vector<int> &nums)
	{
		unordered_map<ll, ll> mp;
		for (auto x : nums)
		{
			mp[x]++;
		}

		ll ans = 0;
		for (auto x : mp)
		{
			if (x.second == 1)
				return -1;
			else if (x.second == 2)
			{
				ans += 1;
			}
			else
			{
				ll rem = x.second % 3;
				if (rem == 0)
				{
					ans += (x.second) / 3;
				}
				else if (rem == 1)
				{
					ans += (x.second) / 3 - 1 + 2;
				}
				else
				{
					ans += (x.second) / 3 + 1;
				}
			}
		}
		return ans;
	}
};

int main()
{

	Solution leetcode2IDE;
	vector<int> nums1 = {2, 3, 3, 2, 2, 4, 2, 3, 4};
	int output_1 = 4;
	if (leetcode2IDE.minOperations(nums1) == output_1)
	{
		cout << "Sample #1 : Accepted" << endl;
	}
	else
	{
		cout << "Sample #1 : Wrong Answer" << endl;
	}

	vector<int> nums2 = {2, 1, 2, 2, 3, 3};
	int output_2 = -1;
	if (leetcode2IDE.minOperations(nums2) == output_2)
	{
		cout << "Sample #2 : Accepted" << endl;
	}
	else
	{
		cout << "Sample #2 : Wrong Answer" << endl;
	}

	return 0;
}
