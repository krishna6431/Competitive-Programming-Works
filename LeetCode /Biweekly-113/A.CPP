
// Generated By Leetcode2IDE
#include <bits/stdc++.h>
using namespace std;

class Solution
{
public:
	int minOperations(vector<int> &nums, int k)
	{
		map<int, int> mp;
		int ans = 0;
		while (nums.size() > 0)
		{
			int elem = nums.back();
			nums.pop_back();
			mp[elem]++;
			ans++;
			int i = 1;
			for (auto x : mp)
			{
				if (x.first == i)
				{
					i++;
				}
				else
				{
					break;
				}
			}
			if (i >= (k + 1))
			{
				cout << "ans: " << ans << endl;
				return ans;
			}
		}
		cout << ans << endl;

		return ans;
	}
};

int main()
{

	Solution leetcode2IDE;
	vector<int> nums1 = {3, 1, 5, 4, 2};
	int k1 = 2;
	int output_1 = 4;
	if (leetcode2IDE.minOperations(nums1, k1) == output_1)
	{
		cout << "Sample #1 : Accepted" << endl;
	}
	else
	{
		cout << "Sample #1 : Wrong Answer" << endl;
	}

	vector<int> nums2 = {3, 1, 5, 4, 2};
	int k2 = 5;
	int output_2 = 5;
	if (leetcode2IDE.minOperations(nums2, k2) == output_2)
	{
		cout << "Sample #2 : Accepted" << endl;
	}
	else
	{
		cout << "Sample #2 : Wrong Answer" << endl;
	}

	vector<int> nums3 = {3, 2, 5, 3, 1};
	int k3 = 3;
	int output_3 = 4;
	if (leetcode2IDE.minOperations(nums3, k3) == output_3)
	{
		cout << "Sample #3 : Accepted" << endl;
	}
	else
	{
		cout << "Sample #3 : Wrong Answer" << endl;
	}

	return 0;
}
