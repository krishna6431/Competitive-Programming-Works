
// Generated By Leetcode2IDE
#include <bits/stdc++.h>
using namespace std;

class Solution
{
public:
    int alternatingSubarray(vector<int> &nums)
    {
        int ans = -1;
        int n = nums.size();
        for (int i = 0; i < n; i++)
        {
            int count = 1;
            int start = nums[i];
            bool par = i % 2;
            for (int j = i + 1; j < n; j++)
            {
                int herepar = j % 2;
                if (par != herepar and nums[j] == start + 1)
                {
                    count++;
                }
                else if (par == herepar and nums[j] == start)
                {
                    count++;
                }
                else
                    break;
            }
            ans = max(ans, count);
        }
        // cout << ans << endl;
        return ans;
    }
};

int main()
{

    Solution leetcode2IDE;
    vector<int> nums1 = {2, 3, 4, 3, 4};
    int output_1 = 4;
    if (leetcode2IDE.alternatingSubarray(nums1) == output_1)
    {
        cout << "Sample #1 : Accepted" << endl;
    }
    else
    {
        cout << "Sample #1 : Wrong Answer" << endl;
    }

    vector<int> nums2 = {4, 5, 6};
    int output_2 = 2;
    if (leetcode2IDE.alternatingSubarray(nums2) == output_2)
    {
        cout << "Sample #2 : Accepted" << endl;
    }
    else
    {
        cout << "Sample #2 : Wrong Answer" << endl;
    }

    return 0;
}
