
// Generated By Leetcode2IDE
#include <bits/stdc++.h>
using namespace std;

class Solution
{
public:
    int countBeautifulPairs(vector<int> &nums)
    {
        int ans = 0;
        for (int i = 0; i < nums.size(); i++)
        {
            for (int j = i + 1; j < nums.size(); j++)
            {
                if (i != j)
                {
                    string a = to_string(nums[i]);
                    string b = to_string(nums[j]);
                    if (__gcd(a[0] - '0', b[b.size() - 1] - '0') == 1)
                    {
                        ans++;
                    }
                }
            }
        }
        return ans;
    }
};

int main()
{

    Solution leetcode2IDE;
    vector<int> nums1 = {2, 5, 1, 4};
    int output_1 = 5;
    if (leetcode2IDE.countBeautifulPairs(nums1) == output_1)
    {
        cout << "Sample #1 : Accepted" << endl;
    }
    else
    {
        cout << "Sample #1 : Wrong Answer" << endl;
    }

    vector<int> nums2 = {11, 21, 12};
    int output_2 = 2;
    if (leetcode2IDE.countBeautifulPairs(nums2) == output_2)
    {
        cout << "Sample #2 : Accepted" << endl;
    }
    else
    {
        cout << "Sample #2 : Wrong Answer" << endl;
    }

    return 0;
}
