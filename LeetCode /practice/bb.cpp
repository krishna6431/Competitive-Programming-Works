
// Generated By Leetcode2IDE
#include <bits/stdc++.h>
using namespace std;

class Solution
{
public:
    vector<int> relocateMarbles(vector<int> &nums, vector<int> &moveFrom, vector<int> &moveTo)
    {
        unordered_set<int> vis;
        vector<int> ans;
        int n = moveFrom.size();
        for (int i = n - 1; i >= 0; i--)
        {
            int u = moveFrom[i];
            int v = moveTo[i];
            if (vis.find(v) == vis.end())
            {
                ans.push_back(v);
                vis.insert(v);
                vis.insert(u);
            }
            else
            {
                vis.insert(u);
                vis.insert(v);
            }
        }
        for (int i = 0; i < nums.size(); i++)
        {
            if (vis.find(nums[i]) == vis.end())
            {
                ans.push_back(nums[i]);
                vis.insert(nums[i]);
            }
        }
        // for (auto x : ans)
        // {
        //     cout << x << " ";
        // }
        // cout << endl;
        sort(ans.begin(), ans.end());
        return ans;
    }
};

int main()
{

    Solution leetcode2IDE;
    vector<int> nums1 = {1, 6, 7, 8};
    vector<int> moveFrom1 = {1, 7, 2};
    vector<int> moveTo1 = {2, 9, 5};
    vector<int> output_1 = {5, 6, 8, 9};
    if (leetcode2IDE.relocateMarbles(nums1, moveFrom1, moveTo1) == output_1)
    {
        cout << "Sample #1 : Accepted" << endl;
    }
    else
    {
        cout << "Sample #1 : Wrong Answer" << endl;
    }

    vector<int> nums2 = {1, 1, 3, 3};
    vector<int> moveFrom2 = {1, 3};
    vector<int> moveTo2 = {2, 2};
    vector<int> output_2 = {2};
    if (leetcode2IDE.relocateMarbles(nums2, moveFrom2, moveTo2) == output_2)
    {
        cout << "Sample #2 : Accepted" << endl;
    }
    else
    {
        cout << "Sample #2 : Wrong Answer" << endl;
    }

    return 0;
}
